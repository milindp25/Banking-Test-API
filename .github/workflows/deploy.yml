name: CI/CD Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Amazon Corretto Java 17
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'     # Use 'corretto' instead of 'amazon-corretto'
          java-version: '17'

      - name: Grant execute permission for Gradle wrapper
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew clean build

      - name: Copy artifact to EC2 instance via SCP
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.AWS_EC2_HOST }}
          username: ${{ secrets.AWS_EC2_USER }}
          key: ${{ secrets.AWS_EC2_SSH_KEY }}
          port: 22
          source: "build/libs/*.jar"
          target: "/home/${{ secrets.AWS_EC2_USER }}/app.jar"

      - name: Deploy application via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.AWS_EC2_HOST }}
          username: ${{ secrets.AWS_EC2_USER }}
          key: ${{ secrets.AWS_EC2_SSH_KEY }}
          port: 22
          script: |
            # Stop any running instance of the app (ignore errors if not running)
            pkill -f 'java -jar' || true
            # Start the app in the background with required environment variables passed as command-line arguments
            nohup java -jar /home/${{ secrets.AWS_EC2_USER }}/app.jar \
              --DB_URL=${{ secrets.DB_URL }} \
              --DB_USERNAME=${{ secrets.DB_USERNAME }} \
              --DB_PASSWORD=${{ secrets.DB_PASSWORD }} \
              --JWT_SECRET=${{ secrets.JWT_SECRET }} > app.log 2>&1 &
